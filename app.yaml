runtime: python
# env: flex
runtime_config:
    operating_system: 'ubuntu22'
    runtime_version: '3.12'

env_variables:
  # GAE_INSTANCE can also be used as proj name
  PROJECT_NAME: $GOOGLE_CLOUD_PROJECT
  APP_VERSION: $GAE_VERSION
  APP_CONFIG: 'gunicorn.conf.py'
  APP_MODULE: 'app:application'
  FLASK_DEBUG: 'false'
  FLASK_SECRET: 'secretkey'
  FLASK_SETTINGS: 'settings.py'
  GRAV_USER: 'rchapman83@gmail.com'
  GA_TRACKING_ID: '45321'
  GIT_REPO: 'zzzz/xxxx'
  GIT_TOKEN: '1243'
  
entrypoint: gunicorn -c $APP_CONFIG -b :$PORT $APP_MODULE

# This sample incurs costs to run on the App Engine flexible environment.
# The settings below are to reduce costs during testing and are not appropriate
# for production use. 
# manual_scaling:
#   instances: 1
# resources:
#   cpu: 1
#   memory_gb: 0.5
#  disk_size_gb: 10

# Liveness checks confirm that the VM and the Docker container are running. 
# Instances that are deemed unhealthy are restarted.
liveness_check:
  path: '/status'
  check_interval_sec: 30
  timeout_sec: 4
  failure_threshold: 2
  success_threshold: 2

readiness_check:
  path: '/status'
  check_interval_sec: 5
  timeout_sec: 4
  failure_threshold: 2
  success_threshold: 2
  app_start_timeout_sec: 300

handlers:
  # This configures Google App Engine to serve the files in the app's static
  # directory.
- url: /app/static
  static_dir: static
  http_headers: 
    X-Forwarded-Proto: https
    X-Forwarded-For: client1
    X-Frame-Options: sameorigin
    X-XSS-Protection: 1; mode=block
    X-UA-Compatible: IE=edge
    Access-Control-Allow-Origin: https://www.rnchapman.pw, https://www.rnchapman.me

  # This handler routes all requests not caught above to your main app. It is
  # required when static routes are defined, but can be omitted (along with
  # the entire handlers section) when there are no static files defined.
- url: /.*
  script: auto
  secure: always
  redirect_http_response_code: 301
  
# network:
#  forwarded_ports:
    # Port forwarding allows for direct connections to the Docker container on your instances.
    # This traffic can travel over any protocol. Port forwarding is intended to help with 
    # situations where you might need to attach a debugger or profiler.
#    - 2222/tcp

# The Python 2 SDK includes a number of built-in handlers for common application functions
# builtins:
#  - deferred: on
#  - appstats: on